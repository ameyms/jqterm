{"name":"Jqterm","tagline":"A JQuery plugin for a commandline emulator with custom interpreters and formatter","body":"jqterm\r\n======\r\n\r\nA JQuery plugin for a commandline emulator with custom interpreters and formatter\r\n\r\nUsage\r\n-----\r\n\r\nIn your HTML file, include the jqterm js and css files\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"jqterm.js\"></script>\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"jqterm.css\" />\r\n```\r\n\r\nTo use emulate terminal inside div with id `terminal`, use following code:\r\n\r\n```javascript\r\n\r\n$('#terminal').term({\r\n\r\n  interpreter: invokeCommand,\r\n  welcome: 'Welcome to jqTerm. The commandline emulator written in JQuery'\r\n\r\n});\r\n\r\n```\r\nWhere `invokeCommand` would be a function that accepts a tokenized command and returns jquery deferred\r\nIf the command entered is \r\n```shell\r\n$ awesome_script -s \"C:\\Program Files\\Foo\\Bar One\\my.pl\" -o foo\r\n```\r\nThe interpreter would receive following array as argument\r\n```javascript\r\n['awesome_script', '-s' 'C:\\Program Files\\Foo\\Bar One\\my.pl', '-o', 'foo']\r\n```\r\n\r\nSo the `invokeCommand` function would look like\r\n```javascript\r\nfunction invokeCommand(cmd)\r\n{\r\n  return $.ajax({\r\n    \r\n    url: '/cmd_interpreter',\r\n    dataType:'json',\r\n    data: {'cmd':cmd}\r\n  });\r\n}\r\n```\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}